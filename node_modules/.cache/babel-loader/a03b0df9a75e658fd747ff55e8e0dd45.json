{"ast":null,"code":"import styled, { keyframes } from 'styled-components';\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport preloader from 'image-preloader';\nimport VisibilitySensor from 'react-visibility-sensor';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteral = function (strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n};\n\nvar _templateObject = taggedTemplateLiteral([\"\\n  from {\\n    opacity: 0;\\n  }\\n\\n  to {\\n    opacity: 1;\\n  }\\n\"], [\"\\n  from {\\n    opacity: 0;\\n  }\\n\\n  to {\\n    opacity: 1;\\n  }\\n\"]),\n    _templateObject2 = taggedTemplateLiteral([\"\\n  from {\\n    background-position: 0 0 ;\\n  }\\n\\n  to {\\n    background-position: calc(100% + 50px);\\n  }\\n\"], [\"\\n  from {\\n    background-position: 0 0 ;\\n  }\\n\\n  to {\\n    background-position: calc(100% + 50px);\\n  }\\n\"]);\n\nvar fadeIn = keyframes(_templateObject);\nvar shine = keyframes(_templateObject2);\n\nvar _templateObject$1 = taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  background-color: #eee;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: \", \";\\n  opacity: \", \";\\n  transition: opacity \", \" ease;\\n\\n  &:before {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 120%;\\n    height: 120%;\\n    transform: rotate(-30deg);\\n    background-image: linear-gradient(\\n      100deg,\\n      rgba(255, 255, 255, 0),\\n      rgba(255, 255, 255, 0.2) 50%,\\n      rgba(255, 255, 255, 0) 80%\\n    );\\n    background-repeat: no-repeat;\\n    background-position: 0 0;\\n    background-size: 100px 100%;\\n    animation: \", \" 1s infinite linear;\\n  }\\n\"], [\"\\n  width: 100%;\\n  height: 100%;\\n  background-color: #eee;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: \", \";\\n  opacity: \", \";\\n  transition: opacity \", \" ease;\\n\\n  &:before {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 120%;\\n    height: 120%;\\n    transform: rotate(-30deg);\\n    background-image: linear-gradient(\\n      100deg,\\n      rgba(255, 255, 255, 0),\\n      rgba(255, 255, 255, 0.2) 50%,\\n      rgba(255, 255, 255, 0) 80%\\n    );\\n    background-repeat: no-repeat;\\n    background-position: 0 0;\\n    background-size: 100px 100%;\\n    animation: \", \" 1s infinite linear;\\n  }\\n\"]);\n\nvar Wrapper = styled.div(_templateObject$1, function (props) {\n  return props.isOnTop ? 10 : -1;\n}, function (props) {\n  return props.isOnTop ? props.hasLoaded ? 0 : 1 : 1;\n}, function (props) {\n  return props.transitionTime;\n}, shine);\nvar defaults$1 = {\n  transitionTime: \"0.3s\"\n};\n\nvar Loader = function Loader(_ref) {\n  var isOnTop = _ref.isOnTop,\n      hasLoaded = _ref.hasLoaded,\n      transitionTime = _ref.transitionTime;\n  return React.createElement(Wrapper, {\n    isOnTop: isOnTop,\n    hasLoaded: hasLoaded,\n    transitionTime: transitionTime\n  });\n};\n\nLoader.propTypes = {\n  isOnTop: PropTypes.bool,\n  hasLoaded: PropTypes.bool,\n  transitionTime: PropTypes.string\n};\nLoader.defaultProps = {\n  transitionTime: defaults$1.transitionTime\n};\n\nvar cssTimeToMs = function cssTimeToMs(cssTime) {\n  var num = parseFloat(cssTime, 10);\n  var unit = cssTime.match(/m?s/);\n  var milliseconds = void 0;\n\n  if (unit) {\n    unit = unit[0];\n  }\n\n  switch (unit) {\n    case \"s\":\n      milliseconds = num * 1000;\n      break;\n\n    case \"ms\":\n      milliseconds = num;\n      break;\n\n    default:\n      milliseconds = 0;\n      break;\n  }\n\n  return milliseconds;\n};\n\nvar getAspectRatioPercentage = function getAspectRatioPercentage(width, height) {\n  var widthNumber = parseInt(width, 10);\n  var heightNumber = parseInt(height, 10);\n  var ratio = heightNumber / widthNumber * 100;\n  return ratio + \"%\";\n};\n\nvar ImageLoader = function (_React$Component) {\n  inherits(ImageLoader, _React$Component);\n\n  function ImageLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ImageLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ImageLoader.__proto__ || Object.getPrototypeOf(ImageLoader)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      hasLoaded: false,\n      hasFailed: false,\n      shouldShowLoader: true,\n      visibilitySensorIsActive: true\n    }, _this.handleImageLoaderLoaded = function () {\n      var transitionTime = _this.props.transitionTime;\n      var hideLoaderDelay = cssTimeToMs(transitionTime);\n\n      _this.setState({\n        hasLoaded: true\n      }, function () {\n        setTimeout(function () {\n          _this.setState({\n            shouldShowLoader: false\n          });\n        }, hideLoaderDelay);\n      });\n    }, _this.handleImageLoaderFailed = function () {\n      _this.setState({\n        hasFailed: true\n      });\n    }, _this.handleVisibilityChange = function (isVisible) {\n      if (!isVisible) return;\n\n      _this.setState({\n        visibilitySensorIsActive: false\n      });\n\n      _this.preloadImage();\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ImageLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.lazyLoad) {\n        this.preloadImage();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.src !== this.props.src) {\n        if (!this.props.lazyLoad) {\n          this.preloadImage();\n        } else {\n          this.setState({\n            visibilitySensorIsActive: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          src = _props.src,\n          children = _props.children,\n          lazyLoad = _props.lazyLoad;\n      var _state = this.state,\n          hasLoaded = _state.hasLoaded,\n          hasFailed = _state.hasFailed,\n          shouldShowLoader = _state.shouldShowLoader,\n          visibilitySensorIsActive = _state.visibilitySensorIsActive;\n      /*\n       * When using ImageLoader the children prop should be a function.\n       * Render calls this function with the props it requires to\n       * fade in an image.\n       * See https://reactjs.org/docs/render-props.html\n       */\n\n      var childElement = children({\n        hasLoaded: hasLoaded,\n        shouldShowLoader: shouldShowLoader,\n        hasFailed: hasFailed,\n        src: src\n      });\n      /*\n       * Wrap element in react visibility sensor when lazyLoad is true\n       */\n\n      return lazyLoad ? React.createElement(VisibilitySensor, {\n        active: visibilitySensorIsActive,\n        onChange: this.handleVisibilityChange,\n        partialVisibility: true\n      }, childElement) : childElement;\n    }\n  }, {\n    key: \"preloadImage\",\n    value: function preloadImage() {\n      var src = this.props.src;\n      preloader.simplePreload(src).then(this.handleImageLoaderLoaded).catch(this.handleImageLoaderFailed);\n    }\n    /*\n     * Once the image is loaded successfully this handler will be\n     * called, this will change the `hasLoaded` attribute to true\n     * then the `shouldShowLoader` attribute to false after\n     * the transition has completed. The reason we do this on a\n     * timeout is to ensure the loader is not hidden as soon as the\n     * image has loaded resulting in a 'flash'\n     */\n\n  }]);\n  return ImageLoader;\n}(React.Component);\n\nImageLoader.propTypes = {\n  src: PropTypes.string.isRequired,\n  transitionTime: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node, PropTypes.func])\n};\nImageLoader.defaultProps = {\n  transitionTime: defaults$1.transitionTime\n};\n\nvar _templateObject$2 = taggedTemplateLiteral([\"\\n  \", \";\\n  \", \";\\n  position: relative;\\n  overflow: hidden;\\n\"], [\"\\n  \", \";\\n  \", \";\\n  position: relative;\\n  overflow: hidden;\\n\"]);\n\nvar Wrapper$1 = styled.div(_templateObject$2, function (_ref) {\n  var width = _ref.width;\n  return !!width && \"width: \" + width;\n}, function (_ref2) {\n  var height = _ref2.height;\n  return !!height && \"height: \" + height;\n});\n\nvar _templateObject$3 = taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  animation: \", \" \", \" ease;\\n\"], [\"\\n  width: 100%;\\n  height: 100%;\\n  animation: \", \" \", \" ease;\\n\"]);\n\nvar Img = styled.img(_templateObject$3, fadeIn, function (props) {\n  return props.transitionTime;\n});\n\nvar _templateObject$4 = taggedTemplateLiteral([\"\\n  \", \";\\n  \", \";\\n  \", \";\\n  position: relative;\\n  overflow: hidden;\\n\"], [\"\\n  \", \";\\n  \", \";\\n  \", \";\\n  position: relative;\\n  overflow: hidden;\\n\"]);\n\nvar Wrapper$2 = styled.div(_templateObject$4, function (_ref) {\n  var width = _ref.width,\n      isResponsive = _ref.isResponsive;\n  return !!width && !isResponsive && \"width: \" + width;\n}, function (_ref2) {\n  var height = _ref2.height,\n      isResponsive = _ref2.isResponsive;\n  return !!height && !isResponsive && \"height: \" + height;\n}, function (_ref3) {\n  var isResponsive = _ref3.isResponsive;\n  return isResponsive && \"\\n      width: 100%;\\n      height: 100%;\\n    \";\n});\n\nvar BackgroundImage = function BackgroundImage(_ref) {\n  var src = _ref.src,\n      width = _ref.width,\n      height = _ref.height,\n      transitionTime = _ref.transitionTime,\n      renderLoader = _ref.renderLoader,\n      disableLoader = _ref.disableLoader,\n      useChild = _ref.useChild,\n      children = _ref.children,\n      element = _ref.element,\n      lazyLoad = _ref.lazyLoad,\n      wrapperClassName = _ref.wrapperClassName,\n      isResponsive = _ref.isResponsive,\n      props = objectWithoutProperties(_ref, [\"src\", \"width\", \"height\", \"transitionTime\", \"renderLoader\", \"disableLoader\", \"useChild\", \"children\", \"element\", \"lazyLoad\", \"wrapperClassName\", \"isResponsive\"]);\n  return React.createElement(ImageLoader, {\n    src: src,\n    transitionTime: transitionTime,\n    lazyLoad: lazyLoad\n  }, function (_ref2) {\n    var hasLoaded = _ref2.hasLoaded,\n        shouldShowLoader = _ref2.shouldShowLoader,\n        hasFailed = _ref2.hasFailed,\n        src = _ref2.src;\n    var backgroundImageStyle = {\n      backgroundImage: \"url(\\\"\" + src + \"\\\")\"\n    };\n    var style = void 0;\n    var childElement = void 0;\n\n    if (useChild) {\n      /*\n       * When in useChild mode we need to clone the child, append the style\n       * and add relative positioning for the loader.\n       */\n      style = children && children.props && children.props.style ? _extends({}, children.props.style) : {};\n      style.position = \"relative\";\n      hasLoaded ? style = _extends({}, style, backgroundImageStyle) : style;\n      childElement = React.cloneElement(children, {\n        style: style\n      });\n    } else {\n      /*\n       * When not in useChild mode we need to create a new element based on\n       * the element prop, apply the styles and include the current children\n       */\n      style = props.style ? _extends({}, props.style) : {};\n      style.width = !isResponsive ? width : \"100%\";\n      style.height = !isResponsive ? height : \"auto\";\n\n      if (isResponsive) {\n        style.paddingTop = getAspectRatioPercentage(width, height);\n      }\n\n      hasLoaded ? style = _extends({}, style, backgroundImageStyle) : style;\n      childElement = React.createElement(element, _extends({}, props, {\n        style: style\n      }), children);\n    }\n\n    return React.createElement(Wrapper$2, {\n      width: width,\n      height: height,\n      isResponsive: isResponsive,\n      className: wrapperClassName\n    }, childElement, shouldShowLoader && !disableLoader && React.createElement(Fragment, null, renderLoader ? renderLoader({\n      hasLoaded: hasLoaded,\n      hasFailed: hasFailed\n    }) : React.createElement(Loader, {\n      isOnTop: true,\n      hasLoaded: hasLoaded,\n      transitionTime: transitionTime\n    })));\n  });\n};\n\nBackgroundImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  transitionTime: PropTypes.string,\n  renderLoader: PropTypes.func,\n  disableLoader: PropTypes.bool,\n  useChild: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  element: PropTypes.string,\n  style: PropTypes.object,\n  wrapperClassName: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  isResponsive: PropTypes.bool\n};\nBackgroundImage.defaultProps = {\n  transitionTime: defaults$1.transitionTime,\n  element: \"div\"\n};\n\nvar Image = function Image(_ref) {\n  var src = _ref.src,\n      width = _ref.width,\n      height = _ref.height,\n      transitionTime = _ref.transitionTime,\n      renderLoader = _ref.renderLoader,\n      disableLoader = _ref.disableLoader,\n      wrapperClassName = _ref.wrapperClassName,\n      isResponsive = _ref.isResponsive,\n      lazyLoad = _ref.lazyLoad,\n      props = objectWithoutProperties(_ref, ['src', 'width', 'height', 'transitionTime', 'renderLoader', 'disableLoader', 'wrapperClassName', 'isResponsive', 'lazyLoad']);\n  return (\n    /*\n     * When in isResponsive is true we will need to make\n     * use of <BackgroundImage /> as in order to achieve responsive\n     * images with an aspect ratio we need to make use of a background image.\n     */\n    isResponsive ? React.createElement(BackgroundImage, _extends({\n      src: src,\n      width: width,\n      height: height,\n      transitionTime: transitionTime,\n      renderLoader: renderLoader,\n      disableLoader: disableLoader,\n      wrapperClassName: wrapperClassName,\n      lazyLoad: lazyLoad,\n      isResponsive: true\n    }, props)) : React.createElement(ImageLoader, {\n      src: src,\n      transitionTime: transitionTime,\n      lazyLoad: lazyLoad\n    }, function (_ref2) {\n      var hasLoaded = _ref2.hasLoaded,\n          shouldShowLoader = _ref2.shouldShowLoader,\n          hasFailed = _ref2.hasFailed,\n          src = _ref2.src;\n      return React.createElement(Wrapper$1, {\n        width: width,\n        height: height,\n        className: wrapperClassName\n      }, hasLoaded && React.createElement(Img, _extends({\n        src: src,\n        transitionTime: transitionTime\n      }, props)), shouldShowLoader && !disableLoader && React.createElement(Fragment, null, renderLoader ? renderLoader({\n        hasLoaded: hasLoaded,\n        hasFailed: hasFailed\n      }) : React.createElement(Loader, null)));\n    })\n  );\n};\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  transitionTime: PropTypes.string,\n  renderLoader: PropTypes.func,\n  disableLoader: PropTypes.bool,\n  wrapperClassName: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  isResponsive: PropTypes.bool\n};\nImage.defaultProps = {\n  transitionTime: defaults$1.transitionTime\n};\nexport { Image, BackgroundImage, ImageLoader };","map":{"version":3,"sources":["../src/keyframes.js","../src/components/Loader/elements/Wrapper.js","../src/defaults.js","../src/components/Loader/Loader.js","../src/util.js","../src/components/ImageLoader/ImageLoader.js","../src/components/Image/elements/Wrapper.js","../src/components/Image/elements/Img.js","../src/components/BackgroundImage/elements/Wrapper.js","../src/components/BackgroundImage/BackgroundImage.js","../src/components/Image/Image.js"],"names":["fadeIn","keyframes","shine","styled","props","defaults","Loader","isOnTop","hasLoaded","transitionTime","PropTypes","string","cssTimeToMs","num","parseFloat","unit","cssTime","milliseconds","getAspectRatioPercentage","widthNumber","parseInt","heightNumber","ratio","ImageLoader","React","propTypes","prevProps","visibilitySensorIsActive","src","children","lazyLoad","hasFailed","shouldShowLoader","childElement","hideLoaderDelay","width","height","isResponsive","BackgroundImage","renderLoader","disableLoader","useChild","element","wrapperClassName","backgroundImageStyle","backgroundImage","style","bool","Image"],"mappings":"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","sourcesContent":["import { keyframes } from \"styled-components\";\n\nexport const fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const shine = keyframes`\n  from {\n    background-position: 0 0 ;\n  }\n\n  to {\n    background-position: calc(100% + 50px);\n  }\n`;\n","import styled from \"styled-components\";\nimport { shine } from \"../../../keyframes\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #eee;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: ${props => (props.isOnTop ? 10 : -1)};\n  opacity: ${props => (props.isOnTop ? (props.hasLoaded ? 0 : 1) : 1)};\n  transition: opacity ${props => props.transitionTime} ease;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 120%;\n    height: 120%;\n    transform: rotate(-30deg);\n    background-image: linear-gradient(\n      100deg,\n      rgba(255, 255, 255, 0),\n      rgba(255, 255, 255, 0.2) 50%,\n      rgba(255, 255, 255, 0) 80%\n    );\n    background-repeat: no-repeat;\n    background-position: 0 0;\n    background-size: 100px 100%;\n    animation: ${shine} 1s infinite linear;\n  }\n`;\n\nexport default Wrapper;\n","export const defaults = {\n  transitionTime: \"0.3s\",\n};\n\nexport default defaults;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Wrapper from \"./elements/Wrapper\";\nimport defaults from \"../../defaults\";\n\nexport const Loader = ({ isOnTop, hasLoaded, transitionTime }) => (\n  <Wrapper\n    isOnTop={isOnTop}\n    hasLoaded={hasLoaded}\n    transitionTime={transitionTime}\n  />\n);\n\nLoader.propTypes = {\n  isOnTop: PropTypes.bool,\n  hasLoaded: PropTypes.bool,\n  transitionTime: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  transitionTime: defaults.transitionTime,\n};\n\nexport default Loader;\n","export const cssTimeToMs = cssTime => {\n  const num = parseFloat(cssTime, 10);\n  let unit = cssTime.match(/m?s/);\n  let milliseconds;\n\n  if (unit) {\n    unit = unit[0];\n  }\n\n  switch (unit) {\n    case \"s\":\n      milliseconds = num * 1000;\n      break;\n    case \"ms\":\n      milliseconds = num;\n      break;\n    default:\n      milliseconds = 0;\n      break;\n  }\n\n  return milliseconds;\n};\n\nexport const getAspectRatioPercentage = (width, height) => {\n  const widthNumber = parseInt(width, 10);\n  const heightNumber = parseInt(height, 10);\n  const ratio = (heightNumber / widthNumber) * 100;\n  return `${ratio}%`;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport preloader from \"image-preloader\";\nimport { cssTimeToMs } from \"../../util\";\nimport defaults from \"../../defaults\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nexport class ImageLoader extends React.Component {\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    transitionTime: PropTypes.string,\n    lazyLoad: PropTypes.bool,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n  };\n\n  state = {\n    hasLoaded: false,\n    hasFailed: false,\n    shouldShowLoader: true,\n    visibilitySensorIsActive: true,\n  };\n\n  componentDidMount() {\n    if (!this.props.lazyLoad) {\n      this.preloadImage();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.src !== this.props.src) {\n      if (!this.props.lazyLoad) {\n        this.preloadImage();\n      } else {\n        this.setState({ visibilitySensorIsActive: true });\n      }\n    }\n  }\n\n  render() {\n    const { src, children, lazyLoad } = this.props;\n    const {\n      hasLoaded,\n      hasFailed,\n      shouldShowLoader,\n      visibilitySensorIsActive,\n    } = this.state;\n    /*\n     * When using ImageLoader the children prop should be a function.\n     * Render calls this function with the props it requires to\n     * fade in an image.\n     * See https://reactjs.org/docs/render-props.html\n     */\n    const childElement = children({\n      hasLoaded,\n      shouldShowLoader,\n      hasFailed,\n      src,\n    });\n\n    /*\n     * Wrap element in react visibility sensor when lazyLoad is true\n     */\n    return lazyLoad ? (\n      <VisibilitySensor\n        active={visibilitySensorIsActive}\n        onChange={this.handleVisibilityChange}\n        partialVisibility\n      >\n        {childElement}\n      </VisibilitySensor>\n    ) : (\n      childElement\n    );\n  }\n\n  preloadImage() {\n    const { src } = this.props;\n    preloader\n      .simplePreload(src)\n      .then(this.handleImageLoaderLoaded)\n      .catch(this.handleImageLoaderFailed);\n  }\n\n  /*\n   * Once the image is loaded successfully this handler will be\n   * called, this will change the `hasLoaded` attribute to true\n   * then the `shouldShowLoader` attribute to false after\n   * the transition has completed. The reason we do this on a\n   * timeout is to ensure the loader is not hidden as soon as the\n   * image has loaded resulting in a 'flash'\n   */\n  handleImageLoaderLoaded = () => {\n    const { transitionTime } = this.props;\n    const hideLoaderDelay = cssTimeToMs(transitionTime);\n    this.setState({ hasLoaded: true }, () => {\n      setTimeout(() => {\n        this.setState({\n          shouldShowLoader: false,\n        });\n      }, hideLoaderDelay);\n    });\n  };\n\n  handleImageLoaderFailed = () => {\n    this.setState({ hasFailed: true });\n  };\n\n  handleVisibilityChange = isVisible => {\n    if (!isVisible) return;\n    this.setState({ visibilitySensorIsActive: false });\n    this.preloadImage();\n  };\n}\n\nImageLoader.defaultProps = {\n  transitionTime: defaults.transitionTime,\n};\n\nexport default ImageLoader;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  ${({ width }) => !!width && `width: ${width}`};\n  ${({ height }) => !!height && `height: ${height}`};\n  position: relative;\n  overflow: hidden;\n`;\n\nexport default Wrapper;\n","import styled from \"styled-components\";\nimport { fadeIn } from \"../../../keyframes\";\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  animation: ${fadeIn} ${props => props.transitionTime} ease;\n`;\n\nexport default Img;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  ${({ width, isResponsive }) => !!width && !isResponsive && `width: ${width}`};\n  ${({ height, isResponsive }) =>\n    !!height && !isResponsive && `height: ${height}`};\n  ${({ isResponsive }) =>\n    isResponsive &&\n    `\n      width: 100%;\n      height: 100%;\n    `};\n  position: relative;\n  overflow: hidden;\n`;\n\nexport default Wrapper;\n","import React, { Fragment } from \"react\";\nimport Loader from \"../Loader\";\nimport ImageLoader from \"../ImageLoader\";\nimport { Wrapper } from \"./elements/Wrapper\";\nimport PropTypes from \"prop-types\";\nimport defaults from \"../../defaults\";\nimport { getAspectRatioPercentage } from \"../../util\";\n\nexport const BackgroundImage = ({\n  src,\n  width,\n  height,\n  transitionTime,\n  renderLoader,\n  disableLoader,\n  useChild,\n  children,\n  element,\n  lazyLoad,\n  wrapperClassName,\n  isResponsive,\n  ...props\n}) => (\n  <ImageLoader src={src} transitionTime={transitionTime} lazyLoad={lazyLoad}>\n    {({ hasLoaded, shouldShowLoader, hasFailed, src }) => {\n      const backgroundImageStyle = { backgroundImage: `url(\"${src}\")` };\n      let style;\n      let childElement;\n      if (useChild) {\n        /*\n         * When in useChild mode we need to clone the child, append the style\n         * and add relative positioning for the loader.\n         */\n        style =\n          children && children.props && children.props.style\n            ? { ...children.props.style }\n            : {};\n        style.position = \"relative\";\n        hasLoaded ? (style = { ...style, ...backgroundImageStyle }) : style;\n        childElement = React.cloneElement(children, { style });\n      } else {\n        /*\n         * When not in useChild mode we need to create a new element based on\n         * the element prop, apply the styles and include the current children\n         */\n        style = props.style ? { ...props.style } : {};\n        style.width = !isResponsive ? width : \"100%\";\n        style.height = !isResponsive ? height : \"auto\";\n        if (isResponsive) {\n          style.paddingTop = getAspectRatioPercentage(width, height);\n        }\n\n        hasLoaded ? (style = { ...style, ...backgroundImageStyle }) : style;\n        childElement = React.createElement(\n          element,\n          { ...props, style },\n          children\n        );\n      }\n\n      return (\n        <Wrapper\n          width={width}\n          height={height}\n          isResponsive={isResponsive}\n          className={wrapperClassName}\n        >\n          {childElement}\n          {shouldShowLoader && !disableLoader && (\n            <Fragment>\n              {renderLoader ? (\n                renderLoader({ hasLoaded, hasFailed })\n              ) : (\n                <Loader\n                  isOnTop\n                  hasLoaded={hasLoaded}\n                  transitionTime={transitionTime}\n                />\n              )}\n            </Fragment>\n          )}\n        </Wrapper>\n      );\n    }}\n  </ImageLoader>\n);\n\nBackgroundImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  transitionTime: PropTypes.string,\n  renderLoader: PropTypes.func,\n  disableLoader: PropTypes.bool,\n  useChild: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  element: PropTypes.string,\n  style: PropTypes.object,\n  wrapperClassName: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  isResponsive: PropTypes.bool,\n};\n\nBackgroundImage.defaultProps = {\n  transitionTime: defaults.transitionTime,\n  element: \"div\",\n};\n\nexport default BackgroundImage;\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Loader from '../Loader'\nimport ImageLoader from '../ImageLoader'\nimport Wrapper from './elements/Wrapper'\nimport Img from './elements/Img'\nimport defaults from '../../defaults'\nimport BackgroundImage from '../BackgroundImage'\n\nexport const Image = ({\n  src,\n  width,\n  height,\n  transitionTime,\n  renderLoader,\n  disableLoader,\n  wrapperClassName,\n  isResponsive,\n  lazyLoad,\n  ...props\n}) =>\n  /*\n   * When in isResponsive is true we will need to make\n   * use of <BackgroundImage /> as in order to achieve responsive\n   * images with an aspect ratio we need to make use of a background image.\n   */\n  isResponsive ? (\n    <BackgroundImage\n      src={src}\n      width={width}\n      height={height}\n      transitionTime={transitionTime}\n      renderLoader={renderLoader}\n      disableLoader={disableLoader}\n      wrapperClassName={wrapperClassName}\n      lazyLoad={lazyLoad}\n      isResponsive\n      {...props}\n    />\n  ) : (\n    <ImageLoader src={src} transitionTime={transitionTime} lazyLoad={lazyLoad}>\n      {({ hasLoaded, shouldShowLoader, hasFailed, src }) => {\n        return (\n          <Wrapper width={width} height={height} className={wrapperClassName}>\n            {hasLoaded && (\n              <Img src={src} transitionTime={transitionTime} {...props} />\n            )}\n            {shouldShowLoader && !disableLoader && (\n              <Fragment>\n                {renderLoader ? (\n                  renderLoader({ hasLoaded, hasFailed })\n                ) : (\n                  <Loader />\n                )}\n              </Fragment>\n            )}\n          </Wrapper>\n        )\n      }}\n    </ImageLoader>\n  )\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  transitionTime: PropTypes.string,\n  renderLoader: PropTypes.func,\n  disableLoader: PropTypes.bool,\n  wrapperClassName: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  isResponsive: PropTypes.bool\n}\n\nImage.defaultProps = {\n  transitionTime: defaults.transitionTime\n}\n\nexport default Image\n"]},"metadata":{},"sourceType":"module"}