'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var styled = require('styled-components');
var styled__default = _interopDefault(styled);
var React = require('react');
var React__default = _interopDefault(React);
var PropTypes = _interopDefault(require('prop-types'));
var preloader = _interopDefault(require('image-preloader'));
var VisibilitySensor = _interopDefault(require('react-visibility-sensor'));

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var taggedTemplateLiteral = function (strings, raw) {
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
};

var _templateObject = taggedTemplateLiteral(["\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n"], ["\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n"]),
    _templateObject2 = taggedTemplateLiteral(["\n  from {\n    background-position: 0 0 ;\n  }\n\n  to {\n    background-position: calc(100% + 50px);\n  }\n"], ["\n  from {\n    background-position: 0 0 ;\n  }\n\n  to {\n    background-position: calc(100% + 50px);\n  }\n"]);

var fadeIn = styled.keyframes(_templateObject);

var shine = styled.keyframes(_templateObject2);

var _templateObject$1 = taggedTemplateLiteral(["\n  width: 100%;\n  height: 100%;\n  background-color: #eee;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: ", ";\n  opacity: ", ";\n  transition: opacity ", " ease;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 120%;\n    height: 120%;\n    transform: rotate(-30deg);\n    background-image: linear-gradient(\n      100deg,\n      rgba(255, 255, 255, 0),\n      rgba(255, 255, 255, 0.2) 50%,\n      rgba(255, 255, 255, 0) 80%\n    );\n    background-repeat: no-repeat;\n    background-position: 0 0;\n    background-size: 100px 100%;\n    animation: ", " 1s infinite linear;\n  }\n"], ["\n  width: 100%;\n  height: 100%;\n  background-color: #eee;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: ", ";\n  opacity: ", ";\n  transition: opacity ", " ease;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 120%;\n    height: 120%;\n    transform: rotate(-30deg);\n    background-image: linear-gradient(\n      100deg,\n      rgba(255, 255, 255, 0),\n      rgba(255, 255, 255, 0.2) 50%,\n      rgba(255, 255, 255, 0) 80%\n    );\n    background-repeat: no-repeat;\n    background-position: 0 0;\n    background-size: 100px 100%;\n    animation: ", " 1s infinite linear;\n  }\n"]);

var Wrapper = styled__default.div(_templateObject$1, function (props) {
  return props.isOnTop ? 10 : -1;
}, function (props) {
  return props.isOnTop ? props.hasLoaded ? 0 : 1 : 1;
}, function (props) {
  return props.transitionTime;
}, shine);

var defaults$1 = {
  transitionTime: "0.3s"
};

var Loader = function Loader(_ref) {
  var isOnTop = _ref.isOnTop,
      hasLoaded = _ref.hasLoaded,
      transitionTime = _ref.transitionTime;
  return React__default.createElement(Wrapper, {
    isOnTop: isOnTop,
    hasLoaded: hasLoaded,
    transitionTime: transitionTime
  });
};

Loader.propTypes = {
  isOnTop: PropTypes.bool,
  hasLoaded: PropTypes.bool,
  transitionTime: PropTypes.string
};

Loader.defaultProps = {
  transitionTime: defaults$1.transitionTime
};

var cssTimeToMs = function cssTimeToMs(cssTime) {
  var num = parseFloat(cssTime, 10);
  var unit = cssTime.match(/m?s/);
  var milliseconds = void 0;

  if (unit) {
    unit = unit[0];
  }

  switch (unit) {
    case "s":
      milliseconds = num * 1000;
      break;
    case "ms":
      milliseconds = num;
      break;
    default:
      milliseconds = 0;
      break;
  }

  return milliseconds;
};

var getAspectRatioPercentage = function getAspectRatioPercentage(width, height) {
  var widthNumber = parseInt(width, 10);
  var heightNumber = parseInt(height, 10);
  var ratio = heightNumber / widthNumber * 100;
  return ratio + "%";
};

var ImageLoader = function (_React$Component) {
  inherits(ImageLoader, _React$Component);

  function ImageLoader() {
    var _ref;

    var _temp, _this, _ret;

    classCallCheck(this, ImageLoader);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ImageLoader.__proto__ || Object.getPrototypeOf(ImageLoader)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hasLoaded: false,
      hasFailed: false,
      shouldShowLoader: true,
      visibilitySensorIsActive: true
    }, _this.handleImageLoaderLoaded = function () {
      var transitionTime = _this.props.transitionTime;

      var hideLoaderDelay = cssTimeToMs(transitionTime);
      _this.setState({ hasLoaded: true }, function () {
        setTimeout(function () {
          _this.setState({
            shouldShowLoader: false
          });
        }, hideLoaderDelay);
      });
    }, _this.handleImageLoaderFailed = function () {
      _this.setState({ hasFailed: true });
    }, _this.handleVisibilityChange = function (isVisible) {
      if (!isVisible) return;
      _this.setState({ visibilitySensorIsActive: false });
      _this.preloadImage();
    }, _temp), possibleConstructorReturn(_this, _ret);
  }

  createClass(ImageLoader, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.lazyLoad) {
        this.preloadImage();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.src !== this.props.src) {
        if (!this.props.lazyLoad) {
          this.preloadImage();
        } else {
          this.setState({ visibilitySensorIsActive: true });
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          src = _props.src,
          children = _props.children,
          lazyLoad = _props.lazyLoad;
      var _state = this.state,
          hasLoaded = _state.hasLoaded,
          hasFailed = _state.hasFailed,
          shouldShowLoader = _state.shouldShowLoader,
          visibilitySensorIsActive = _state.visibilitySensorIsActive;
      /*
       * When using ImageLoader the children prop should be a function.
       * Render calls this function with the props it requires to
       * fade in an image.
       * See https://reactjs.org/docs/render-props.html
       */

      var childElement = children({
        hasLoaded: hasLoaded,
        shouldShowLoader: shouldShowLoader,
        hasFailed: hasFailed,
        src: src
      });

      /*
       * Wrap element in react visibility sensor when lazyLoad is true
       */
      return lazyLoad ? React__default.createElement(
        VisibilitySensor,
        {
          active: visibilitySensorIsActive,
          onChange: this.handleVisibilityChange,
          partialVisibility: true
        },
        childElement
      ) : childElement;
    }
  }, {
    key: "preloadImage",
    value: function preloadImage() {
      var src = this.props.src;

      preloader.simplePreload(src).then(this.handleImageLoaderLoaded).catch(this.handleImageLoaderFailed);
    }

    /*
     * Once the image is loaded successfully this handler will be
     * called, this will change the `hasLoaded` attribute to true
     * then the `shouldShowLoader` attribute to false after
     * the transition has completed. The reason we do this on a
     * timeout is to ensure the loader is not hidden as soon as the
     * image has loaded resulting in a 'flash'
     */

  }]);
  return ImageLoader;
}(React__default.Component);

ImageLoader.propTypes = {
  src: PropTypes.string.isRequired,
  transitionTime: PropTypes.string,
  lazyLoad: PropTypes.bool,
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node, PropTypes.func])
};
ImageLoader.defaultProps = {
  transitionTime: defaults$1.transitionTime
};

var _templateObject$2 = taggedTemplateLiteral(["\n  ", ";\n  ", ";\n  position: relative;\n  overflow: hidden;\n"], ["\n  ", ";\n  ", ";\n  position: relative;\n  overflow: hidden;\n"]);

var Wrapper$1 = styled__default.div(_templateObject$2, function (_ref) {
  var width = _ref.width;
  return !!width && "width: " + width;
}, function (_ref2) {
  var height = _ref2.height;
  return !!height && "height: " + height;
});

var _templateObject$3 = taggedTemplateLiteral(["\n  width: 100%;\n  height: 100%;\n  animation: ", " ", " ease;\n"], ["\n  width: 100%;\n  height: 100%;\n  animation: ", " ", " ease;\n"]);

var Img = styled__default.img(_templateObject$3, fadeIn, function (props) {
  return props.transitionTime;
});

var _templateObject$4 = taggedTemplateLiteral(["\n  ", ";\n  ", ";\n  ", ";\n  position: relative;\n  overflow: hidden;\n"], ["\n  ", ";\n  ", ";\n  ", ";\n  position: relative;\n  overflow: hidden;\n"]);

var Wrapper$2 = styled__default.div(_templateObject$4, function (_ref) {
  var width = _ref.width,
      isResponsive = _ref.isResponsive;
  return !!width && !isResponsive && "width: " + width;
}, function (_ref2) {
  var height = _ref2.height,
      isResponsive = _ref2.isResponsive;
  return !!height && !isResponsive && "height: " + height;
}, function (_ref3) {
  var isResponsive = _ref3.isResponsive;
  return isResponsive && "\n      width: 100%;\n      height: 100%;\n    ";
});

var BackgroundImage = function BackgroundImage(_ref) {
  var src = _ref.src,
      width = _ref.width,
      height = _ref.height,
      transitionTime = _ref.transitionTime,
      renderLoader = _ref.renderLoader,
      disableLoader = _ref.disableLoader,
      useChild = _ref.useChild,
      children = _ref.children,
      element = _ref.element,
      lazyLoad = _ref.lazyLoad,
      wrapperClassName = _ref.wrapperClassName,
      isResponsive = _ref.isResponsive,
      props = objectWithoutProperties(_ref, ["src", "width", "height", "transitionTime", "renderLoader", "disableLoader", "useChild", "children", "element", "lazyLoad", "wrapperClassName", "isResponsive"]);
  return React__default.createElement(
    ImageLoader,
    { src: src, transitionTime: transitionTime, lazyLoad: lazyLoad },
    function (_ref2) {
      var hasLoaded = _ref2.hasLoaded,
          shouldShowLoader = _ref2.shouldShowLoader,
          hasFailed = _ref2.hasFailed,
          src = _ref2.src;

      var backgroundImageStyle = { backgroundImage: "url(\"" + src + "\")" };
      var style = void 0;
      var childElement = void 0;
      if (useChild) {
        /*
         * When in useChild mode we need to clone the child, append the style
         * and add relative positioning for the loader.
         */
        style = children && children.props && children.props.style ? _extends({}, children.props.style) : {};
        style.position = "relative";
        hasLoaded ? style = _extends({}, style, backgroundImageStyle) : style;
        childElement = React__default.cloneElement(children, { style: style });
      } else {
        /*
         * When not in useChild mode we need to create a new element based on
         * the element prop, apply the styles and include the current children
         */
        style = props.style ? _extends({}, props.style) : {};
        style.width = !isResponsive ? width : "100%";
        style.height = !isResponsive ? height : "auto";
        if (isResponsive) {
          style.paddingTop = getAspectRatioPercentage(width, height);
        }

        hasLoaded ? style = _extends({}, style, backgroundImageStyle) : style;
        childElement = React__default.createElement(element, _extends({}, props, { style: style }), children);
      }

      return React__default.createElement(
        Wrapper$2,
        {
          width: width,
          height: height,
          isResponsive: isResponsive,
          className: wrapperClassName
        },
        childElement,
        shouldShowLoader && !disableLoader && React__default.createElement(
          React.Fragment,
          null,
          renderLoader ? renderLoader({ hasLoaded: hasLoaded, hasFailed: hasFailed }) : React__default.createElement(Loader, {
            isOnTop: true,
            hasLoaded: hasLoaded,
            transitionTime: transitionTime
          })
        )
      );
    }
  );
};
BackgroundImage.propTypes = {
  src: PropTypes.string.isRequired,
  width: PropTypes.string,
  height: PropTypes.string,
  transitionTime: PropTypes.string,
  renderLoader: PropTypes.func,
  disableLoader: PropTypes.bool,
  useChild: PropTypes.bool,
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),
  element: PropTypes.string,
  style: PropTypes.object,
  wrapperClassName: PropTypes.string,
  lazyLoad: PropTypes.bool,
  isResponsive: PropTypes.bool
};

BackgroundImage.defaultProps = {
  transitionTime: defaults$1.transitionTime,
  element: "div"
};

var Image = function Image(_ref) {
  var src = _ref.src,
      width = _ref.width,
      height = _ref.height,
      transitionTime = _ref.transitionTime,
      renderLoader = _ref.renderLoader,
      disableLoader = _ref.disableLoader,
      wrapperClassName = _ref.wrapperClassName,
      isResponsive = _ref.isResponsive,
      lazyLoad = _ref.lazyLoad,
      props = objectWithoutProperties(_ref, ['src', 'width', 'height', 'transitionTime', 'renderLoader', 'disableLoader', 'wrapperClassName', 'isResponsive', 'lazyLoad']);
  return (
    /*
     * When in isResponsive is true we will need to make
     * use of <BackgroundImage /> as in order to achieve responsive
     * images with an aspect ratio we need to make use of a background image.
     */
    isResponsive ? React__default.createElement(BackgroundImage, _extends({
      src: src,
      width: width,
      height: height,
      transitionTime: transitionTime,
      renderLoader: renderLoader,
      disableLoader: disableLoader,
      wrapperClassName: wrapperClassName,
      lazyLoad: lazyLoad,
      isResponsive: true
    }, props)) : React__default.createElement(
      ImageLoader,
      { src: src, transitionTime: transitionTime, lazyLoad: lazyLoad },
      function (_ref2) {
        var hasLoaded = _ref2.hasLoaded,
            shouldShowLoader = _ref2.shouldShowLoader,
            hasFailed = _ref2.hasFailed,
            src = _ref2.src;

        return React__default.createElement(
          Wrapper$1,
          { width: width, height: height, className: wrapperClassName },
          hasLoaded && React__default.createElement(Img, _extends({ src: src, transitionTime: transitionTime }, props)),
          shouldShowLoader && !disableLoader && React__default.createElement(
            React.Fragment,
            null,
            renderLoader ? renderLoader({ hasLoaded: hasLoaded, hasFailed: hasFailed }) : React__default.createElement(Loader, null)
          )
        );
      }
    )
  );
};
Image.propTypes = {
  src: PropTypes.string.isRequired,
  width: PropTypes.string,
  height: PropTypes.string,
  transitionTime: PropTypes.string,
  renderLoader: PropTypes.func,
  disableLoader: PropTypes.bool,
  wrapperClassName: PropTypes.string,
  lazyLoad: PropTypes.bool,
  isResponsive: PropTypes.bool
};

Image.defaultProps = {
  transitionTime: defaults$1.transitionTime
};

exports.Image = Image;
exports.BackgroundImage = BackgroundImage;
exports.ImageLoader = ImageLoader;
//# sourceMappingURL=index.js.map
