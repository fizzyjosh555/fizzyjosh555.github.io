{"version":3,"file":"index.js","sources":["../src/keyframes.js","../src/components/Loader/elements/Wrapper.js","../src/defaults.js","../src/components/Loader/Loader.js","../src/util.js","../src/components/ImageLoader/ImageLoader.js","../src/components/Image/elements/Wrapper.js","../src/components/Image/elements/Img.js","../src/components/BackgroundImage/elements/Wrapper.js","../src/components/BackgroundImage/BackgroundImage.js","../src/components/Image/Image.js"],"sourcesContent":["import { keyframes } from \"styled-components\";\n\nexport const fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const shine = keyframes`\n  from {\n    background-position: 0 0 ;\n  }\n\n  to {\n    background-position: calc(100% + 50px);\n  }\n`;\n","import styled from \"styled-components\";\nimport { shine } from \"../../../keyframes\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #eee;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: ${props => (props.isOnTop ? 10 : -1)};\n  opacity: ${props => (props.isOnTop ? (props.hasLoaded ? 0 : 1) : 1)};\n  transition: opacity ${props => props.transitionTime} ease;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 120%;\n    height: 120%;\n    transform: rotate(-30deg);\n    background-image: linear-gradient(\n      100deg,\n      rgba(255, 255, 255, 0),\n      rgba(255, 255, 255, 0.2) 50%,\n      rgba(255, 255, 255, 0) 80%\n    );\n    background-repeat: no-repeat;\n    background-position: 0 0;\n    background-size: 100px 100%;\n    animation: ${shine} 1s infinite linear;\n  }\n`;\n\nexport default Wrapper;\n","export const defaults = {\n  transitionTime: \"0.3s\",\n};\n\nexport default defaults;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Wrapper from \"./elements/Wrapper\";\nimport defaults from \"../../defaults\";\n\nexport const Loader = ({ isOnTop, hasLoaded, transitionTime }) => (\n  <Wrapper\n    isOnTop={isOnTop}\n    hasLoaded={hasLoaded}\n    transitionTime={transitionTime}\n  />\n);\n\nLoader.propTypes = {\n  isOnTop: PropTypes.bool,\n  hasLoaded: PropTypes.bool,\n  transitionTime: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  transitionTime: defaults.transitionTime,\n};\n\nexport default Loader;\n","export const cssTimeToMs = cssTime => {\n  const num = parseFloat(cssTime, 10);\n  let unit = cssTime.match(/m?s/);\n  let milliseconds;\n\n  if (unit) {\n    unit = unit[0];\n  }\n\n  switch (unit) {\n    case \"s\":\n      milliseconds = num * 1000;\n      break;\n    case \"ms\":\n      milliseconds = num;\n      break;\n    default:\n      milliseconds = 0;\n      break;\n  }\n\n  return milliseconds;\n};\n\nexport const getAspectRatioPercentage = (width, height) => {\n  const widthNumber = parseInt(width, 10);\n  const heightNumber = parseInt(height, 10);\n  const ratio = (heightNumber / widthNumber) * 100;\n  return `${ratio}%`;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport preloader from \"image-preloader\";\nimport { cssTimeToMs } from \"../../util\";\nimport defaults from \"../../defaults\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nexport class ImageLoader extends React.Component {\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    transitionTime: PropTypes.string,\n    lazyLoad: PropTypes.bool,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.func,\n    ]),\n  };\n\n  state = {\n    hasLoaded: false,\n    hasFailed: false,\n    shouldShowLoader: true,\n    visibilitySensorIsActive: true,\n  };\n\n  componentDidMount() {\n    if (!this.props.lazyLoad) {\n      this.preloadImage();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.src !== this.props.src) {\n      if (!this.props.lazyLoad) {\n        this.preloadImage();\n      } else {\n        this.setState({ visibilitySensorIsActive: true });\n      }\n    }\n  }\n\n  render() {\n    const { src, children, lazyLoad } = this.props;\n    const {\n      hasLoaded,\n      hasFailed,\n      shouldShowLoader,\n      visibilitySensorIsActive,\n    } = this.state;\n    /*\n     * When using ImageLoader the children prop should be a function.\n     * Render calls this function with the props it requires to\n     * fade in an image.\n     * See https://reactjs.org/docs/render-props.html\n     */\n    const childElement = children({\n      hasLoaded,\n      shouldShowLoader,\n      hasFailed,\n      src,\n    });\n\n    /*\n     * Wrap element in react visibility sensor when lazyLoad is true\n     */\n    return lazyLoad ? (\n      <VisibilitySensor\n        active={visibilitySensorIsActive}\n        onChange={this.handleVisibilityChange}\n        partialVisibility\n      >\n        {childElement}\n      </VisibilitySensor>\n    ) : (\n      childElement\n    );\n  }\n\n  preloadImage() {\n    const { src } = this.props;\n    preloader\n      .simplePreload(src)\n      .then(this.handleImageLoaderLoaded)\n      .catch(this.handleImageLoaderFailed);\n  }\n\n  /*\n   * Once the image is loaded successfully this handler will be\n   * called, this will change the `hasLoaded` attribute to true\n   * then the `shouldShowLoader` attribute to false after\n   * the transition has completed. The reason we do this on a\n   * timeout is to ensure the loader is not hidden as soon as the\n   * image has loaded resulting in a 'flash'\n   */\n  handleImageLoaderLoaded = () => {\n    const { transitionTime } = this.props;\n    const hideLoaderDelay = cssTimeToMs(transitionTime);\n    this.setState({ hasLoaded: true }, () => {\n      setTimeout(() => {\n        this.setState({\n          shouldShowLoader: false,\n        });\n      }, hideLoaderDelay);\n    });\n  };\n\n  handleImageLoaderFailed = () => {\n    this.setState({ hasFailed: true });\n  };\n\n  handleVisibilityChange = isVisible => {\n    if (!isVisible) return;\n    this.setState({ visibilitySensorIsActive: false });\n    this.preloadImage();\n  };\n}\n\nImageLoader.defaultProps = {\n  transitionTime: defaults.transitionTime,\n};\n\nexport default ImageLoader;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  ${({ width }) => !!width && `width: ${width}`};\n  ${({ height }) => !!height && `height: ${height}`};\n  position: relative;\n  overflow: hidden;\n`;\n\nexport default Wrapper;\n","import styled from \"styled-components\";\nimport { fadeIn } from \"../../../keyframes\";\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  animation: ${fadeIn} ${props => props.transitionTime} ease;\n`;\n\nexport default Img;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  ${({ width, isResponsive }) => !!width && !isResponsive && `width: ${width}`};\n  ${({ height, isResponsive }) =>\n    !!height && !isResponsive && `height: ${height}`};\n  ${({ isResponsive }) =>\n    isResponsive &&\n    `\n      width: 100%;\n      height: 100%;\n    `};\n  position: relative;\n  overflow: hidden;\n`;\n\nexport default Wrapper;\n","import React, { Fragment } from \"react\";\nimport Loader from \"../Loader\";\nimport ImageLoader from \"../ImageLoader\";\nimport { Wrapper } from \"./elements/Wrapper\";\nimport PropTypes from \"prop-types\";\nimport defaults from \"../../defaults\";\nimport { getAspectRatioPercentage } from \"../../util\";\n\nexport const BackgroundImage = ({\n  src,\n  width,\n  height,\n  transitionTime,\n  renderLoader,\n  disableLoader,\n  useChild,\n  children,\n  element,\n  lazyLoad,\n  wrapperClassName,\n  isResponsive,\n  ...props\n}) => (\n  <ImageLoader src={src} transitionTime={transitionTime} lazyLoad={lazyLoad}>\n    {({ hasLoaded, shouldShowLoader, hasFailed, src }) => {\n      const backgroundImageStyle = { backgroundImage: `url(\"${src}\")` };\n      let style;\n      let childElement;\n      if (useChild) {\n        /*\n         * When in useChild mode we need to clone the child, append the style\n         * and add relative positioning for the loader.\n         */\n        style =\n          children && children.props && children.props.style\n            ? { ...children.props.style }\n            : {};\n        style.position = \"relative\";\n        hasLoaded ? (style = { ...style, ...backgroundImageStyle }) : style;\n        childElement = React.cloneElement(children, { style });\n      } else {\n        /*\n         * When not in useChild mode we need to create a new element based on\n         * the element prop, apply the styles and include the current children\n         */\n        style = props.style ? { ...props.style } : {};\n        style.width = !isResponsive ? width : \"100%\";\n        style.height = !isResponsive ? height : \"auto\";\n        if (isResponsive) {\n          style.paddingTop = getAspectRatioPercentage(width, height);\n        }\n\n        hasLoaded ? (style = { ...style, ...backgroundImageStyle }) : style;\n        childElement = React.createElement(\n          element,\n          { ...props, style },\n          children\n        );\n      }\n\n      return (\n        <Wrapper\n          width={width}\n          height={height}\n          isResponsive={isResponsive}\n          className={wrapperClassName}\n        >\n          {childElement}\n          {shouldShowLoader && !disableLoader && (\n            <Fragment>\n              {renderLoader ? (\n                renderLoader({ hasLoaded, hasFailed })\n              ) : (\n                <Loader\n                  isOnTop\n                  hasLoaded={hasLoaded}\n                  transitionTime={transitionTime}\n                />\n              )}\n            </Fragment>\n          )}\n        </Wrapper>\n      );\n    }}\n  </ImageLoader>\n);\n\nBackgroundImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  transitionTime: PropTypes.string,\n  renderLoader: PropTypes.func,\n  disableLoader: PropTypes.bool,\n  useChild: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  element: PropTypes.string,\n  style: PropTypes.object,\n  wrapperClassName: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  isResponsive: PropTypes.bool,\n};\n\nBackgroundImage.defaultProps = {\n  transitionTime: defaults.transitionTime,\n  element: \"div\",\n};\n\nexport default BackgroundImage;\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Loader from '../Loader'\nimport ImageLoader from '../ImageLoader'\nimport Wrapper from './elements/Wrapper'\nimport Img from './elements/Img'\nimport defaults from '../../defaults'\nimport BackgroundImage from '../BackgroundImage'\n\nexport const Image = ({\n  src,\n  width,\n  height,\n  transitionTime,\n  renderLoader,\n  disableLoader,\n  wrapperClassName,\n  isResponsive,\n  lazyLoad,\n  ...props\n}) =>\n  /*\n   * When in isResponsive is true we will need to make\n   * use of <BackgroundImage /> as in order to achieve responsive\n   * images with an aspect ratio we need to make use of a background image.\n   */\n  isResponsive ? (\n    <BackgroundImage\n      src={src}\n      width={width}\n      height={height}\n      transitionTime={transitionTime}\n      renderLoader={renderLoader}\n      disableLoader={disableLoader}\n      wrapperClassName={wrapperClassName}\n      lazyLoad={lazyLoad}\n      isResponsive\n      {...props}\n    />\n  ) : (\n    <ImageLoader src={src} transitionTime={transitionTime} lazyLoad={lazyLoad}>\n      {({ hasLoaded, shouldShowLoader, hasFailed, src }) => {\n        return (\n          <Wrapper width={width} height={height} className={wrapperClassName}>\n            {hasLoaded && (\n              <Img src={src} transitionTime={transitionTime} {...props} />\n            )}\n            {shouldShowLoader && !disableLoader && (\n              <Fragment>\n                {renderLoader ? (\n                  renderLoader({ hasLoaded, hasFailed })\n                ) : (\n                  <Loader />\n                )}\n              </Fragment>\n            )}\n          </Wrapper>\n        )\n      }}\n    </ImageLoader>\n  )\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  transitionTime: PropTypes.string,\n  renderLoader: PropTypes.func,\n  disableLoader: PropTypes.bool,\n  wrapperClassName: PropTypes.string,\n  lazyLoad: PropTypes.bool,\n  isResponsive: PropTypes.bool\n}\n\nImage.defaultProps = {\n  transitionTime: defaults.transitionTime\n}\n\nexport default Image\n"],"names":["fadeIn","keyframes","shine","Wrapper","styled","div","props","isOnTop","hasLoaded","transitionTime","defaults","Loader","React","propTypes","PropTypes","bool","string","defaultProps","cssTimeToMs","num","parseFloat","cssTime","unit","match","milliseconds","getAspectRatioPercentage","width","height","widthNumber","parseInt","heightNumber","ratio","ImageLoader","state","handleImageLoaderLoaded","hideLoaderDelay","setState","handleImageLoaderFailed","hasFailed","handleVisibilityChange","isVisible","visibilitySensorIsActive","preloadImage","lazyLoad","prevProps","src","children","shouldShowLoader","childElement","simplePreload","then","catch","Component","isRequired","oneOfType","arrayOf","node","func","Img","img","isResponsive","BackgroundImage","renderLoader","disableLoader","useChild","element","wrapperClassName","backgroundImageStyle","backgroundImage","style","position","cloneElement","paddingTop","createElement","object","Image"],"mappings":"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"}